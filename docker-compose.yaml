version: '3.8'

services:
  # A persistent database for local development.
  postgres-dev:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: spaced
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - '5432:5432'
  kafka:
    image: bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    ports:
      - '9092:9092'
  redis:
    image: redis
    ports:
      - '6379:6379'
  # envoy:
  #   image: envoyproxy/envoy:distroless-dev
  #   ports:
  #     - '10000:10000'
  #   volumes:
  #     - ./envoy.yaml:/etc/envoy/envoy.yaml
  ###################################
  ###           BUILD             ###
  ###################################
  # item_producer:
  #   profiles: ['sevices']
  #   image: spaced/item_producer:latest
  #   build:
  #     dockerfile: srcs/services/item_producer/Dockerfile
  # item_consumer:
  #   profiles: ['sevices']
  #   image: spaced/item_consumer:latest
  #   build:
  #     dockerfile: srcs/services/item_consumer/Dockerfile
  item_service:
    profiles: ['sevices']
    image: spaced/item_service:latest
    build:
      dockerfile: srcs/services/item_service/Dockerfile
  user_service:
    profiles: ['sevices']
    image: spaced/user_service:latest
    build:
      dockerfile: srcs/services/user_service/Dockerfile
  web_socket:
    profiles: ['sevices']
    image: spaced/web_socket:latest
    build:
      dockerfile: srcs/services/web_socket/Dockerfile
