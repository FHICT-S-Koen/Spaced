name: ci

on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:

env:
  RUSTFLAGS: '-Dwarnings'
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  app_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  tsc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npx tsc

  fmt_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm run fmt

  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0 libayatana-appindicator3-dev protobuf-compiler
          rustup set auto-self-update disable
          rustup toolchain install stable --profile minimal --component clippy
          mkdir dist
      - run: npm run clippy

  test_rust:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: spaced
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq
        env:
          RABBITMQ_DEFAULT_USER: admin
          RABBITMQ_DEFAULT_PASS: password
        ports:
          - 5672:5672
          - 15672:15672
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0 libayatana-appindicator3-dev protobuf-compiler
          rustup set auto-self-update disable
          rustup toolchain install stable --profile minimal --component clippy
          mkdir dist
      - run: cargo install sqlx-cli
      - run: sqlx db setup
        env:
          DATABASE_URL: postgres://admin:password@localhost:5432/spaced
      - run: cargo test
        env:
          DATABASE_URL: postgres://admin:password@localhost:5432/spaced

  docker_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: build
        uses: docker/bake-action@v4
