name: ci

on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:

env:
  RUSTFLAGS: '-Dwarnings'
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  app_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  tsc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npx --workspaces tsc

  fmt_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm run fmt

  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0 libayatana-appindicator3-dev protobuf-compiler
          rustup set auto-self-update disable
          rustup toolchain install stable --profile minimal --component clippy
          mkdir dist
      - run: npm run clippy

  test_rust:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: spaced
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq
        env:
          RABBITMQ_DEFAULT_USER: admin
          RABBITMQ_DEFAULT_PASS: password
        ports:
          - 5672:5672
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0 libayatana-appindicator3-dev protobuf-compiler
          rustup set auto-self-update disable
          rustup toolchain install stable --profile minimal --component clippy
          mkdir dist
      - run: cargo test
        env:
          DATABASE_URL: postgres://admin:password@localhost:5432/spaced
          SQLX_OFFLINE: true

  build_app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: app
          path: dist

  build_docker:
    runs-on: ubuntu-latest
    needs: build_app
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: app
          path: dist
      - uses: docker/bake-action@v4
      - run: docker images
      - run: docker save $(docker images --filter "reference=spaced/*" --format "{{.Repository}}:{{.Tag}}") -o images.tar
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docker images
          path: images.tar

  e2e:
    runs-on: ubuntu-latest
    needs: build_docker
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: docker images
          path: .
      - run: docker load -i images.tar
      - run: docker compose --profile services up -d
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci
      - run: npx playwright install --with-deps
      - run: npm run e2e
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: srcs/e2e/playwright-report/
          retention-days: 30
